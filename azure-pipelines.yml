# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  DEVKITPRO: $(Agent.TempDirectory)\bar\devkitPro
  DEVKITARM: $(Agent.TempDirectory)\bar\devkitPro\devkitARM
  TEAK_LLVM: $(Agent.TempDirectory)\bar\teak
  CURRENT_DATE: $[format('{0:yyyyMMdd\-HHmmss}', pipeline.startTime)]
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    GITHUB_RELEASE_ISPRERELEASE: false
  ${{ if ne(variables['Build.SourceBranchName'], 'master') }}:
    GITHUB_RELEASE_ISPRERELEASE: true

pool:
  vmImage: 'windows-latest'

steps:
- script: |
    cd $(Agent.TempDirectory)
    powershell.exe -nologo -noprofile -command "& { $client = new-object System.Net.WebClient; $client.DownloadFile('https://github.com/Gericom/GBARunner2BuildTools/raw/master/devkitPro.zip','devkitPro.zip'); }"
    powershell.exe -nologo -noprofile -command "& { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('devkitPro.zip', 'bar'); }"
    powershell.exe -nologo -noprofile -command "& { $client = new-object System.Net.WebClient; $client.DownloadFile('https://github.com/Gericom/GBARunner2BuildTools/raw/master/teak.zip','teak.zip'); }"
    powershell.exe -nologo -noprofile -command "& { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('teak.zip', 'bar\\teak'); }"
    md $(Build.Repository.LocalPath)\build
  displayName: 'Prepare environment'

- script: |
    cd $(Build.Repository.LocalPath)
    make
    move GBARunner2.nds $(Build.Repository.LocalPath)\build\GBARunner2_arm9dldi_ds.nds
    make clean
  displayName: 'Build arm9dldi_ds'

- script: |
    cd $(Build.Repository.LocalPath)
    make all ARM7_DLDI=1
    move GBARunner2.nds $(Build.Repository.LocalPath)\build\GBARunner2_arm7dldi_ds.nds    
    make clean
  displayName: 'Build arm7dldi_ds'

- script: |
    cd $(Build.Repository.LocalPath)
    make all ARM7_DLDI=1 USE_DSI_16MB=1
    move GBARunner2.nds $(Build.Repository.LocalPath)\build\GBARunner2_arm7dldi_dsi.nds    
    make clean
  displayName: 'Build arm7dldi_dsi'

- script: |
    cd $(Build.Repository.LocalPath)
    make all ARM7_DLDI=1 USE_3DS_32MB=1
    move GBARunner2.nds $(Build.Repository.LocalPath)\build\GBARunner2_arm7dldi_3ds.nds    
    make clean
  displayName: 'Build arm7dldi_3ds'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.Repository.LocalPath)\\build'
    artifact: 'GBARunner2 Build'

- task: short-git-version-hash-extractor@1

- task: GitHubRelease@0
  condition: not(eq(variables['Build.Reason'], 'PullRequest'))
  inputs:
    gitHubConnection: Gericom2
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'manual'
    tag: 'v$(CURRENT_DATE)_$(ShortVersionHash)_$(Build.SourceBranchName)'
    assets: '$(Build.Repository.LocalPath)/build/*'
    addChangeLog: false
    isPreRelease: $(GITHUB_RELEASE_ISPRERELEASE)